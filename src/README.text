................................................................................................................................................................
// Benjamin Bravo y Juliana Defaur
...................¿CÓMO EJECUTAR EL PROGRAMA?...................

Para ejecutar el programa, simplemente corre la clase principal Main.java.
El sistema está diseñado para leer automáticamente un archivo de texto ubicado en la siguiente ruta: src/Persistencia/Documento

Una vez iniciado, el programa procesará el archivo, construirá un índice alfabético utilizando un árbol AVL y lo mostrará por pantalla.

......¿CÓMO SE PRESENTA EL ÍNDICE?......

El índice generado tiene la siguiente estructura:
- Las palabras o frases se agrupan por su letra inicial, encabezadas por líneas como: -A-, -B-, -C-, etc.
- Junto a cada palabra se indican los números de página donde aparece.
- Si una palabra aparece varias veces en la misma página, se indica el número de repeticiones entre paréntesis.

Ejemplo:
-P-
palabra 1: 1 (2), 3
palabra 2: 2

Esto significa que "palabra 1" aparece dos veces en la página 1 y una vez en la página 3, mientras que "palabra 2"
aparece una vez en la página 2.

......¿CÓMO USO EL MENÚ?......

Después de mostrar el índice, el programa presenta un menú con las siguientes opciones:

1) Buscar páginas de una palabra o frase
   Permite ingresar una palabra o frase. El programa mostrará las páginas donde aparece.

2) Buscar páginas donde aparecen ambas palabras o frases
   Permite ingresar dos palabras o frases. Se listarán las páginas donde AMBAS aparecen al mismo tiempo.
   (las paginas serán separdas por un espacio)

   Ej: Pag1 Pag2 Pag3

3) Buscar páginas donde aparece al menos una palabra o frase
   Permite ingresar dos palabras o frases. Se mostrarán todas las páginas donde aparece AL MENOS UNA de ellas.
   (las paginas serán separdas por un espacio)

   Ej: Pag1 Pag2 Pag3


4) Finalizar
   Termina la ejecución del programa.

......OTRAS CLASES......

PERSISTENCIA
* ProcesarDoc: Esta es una clase de persistencia, por lo que su función en el código es para leer el documento adjunto en
el cual se encuentran las palabras a utilizar en el código.

MODELO
* Nodo: Aquí se crean los nodos que estarán presentes en el AVL, al crear un nodo, este almacena la palabra ingresada,
frecuencia por página, los hijos izquierdo y derecho del nodo, y la altura del nodo para determinar el balance en el AVL.
Posee un constructor y un método para aumentar la frecuencia por página. Además de un método toString para su impresión.

* AVL: Aqui se maneja lo que respecta a la creación del arbol AVL, teniendo metodos de inserción, búsqueda, rotación y
balance. Además tiene métodos para la creación e impresión del índice. Y también, métodos para listar las paginas en las
que se encuentra una palabra.
................................................................................................................................................................